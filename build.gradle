allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.jetbrains:annotations:24.1.0'

        testImplementation(platform('org.junit:junit-bom:5.10.1'))
        testImplementation('org.junit.jupiter:junit-jupiter')
    }

    test {
        useJUnitPlatform()
    }

    compileJava {
        options.encoding = 'UTF-8'
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        withSourcesJar()
        withJavadocJar()
    }
}

subprojects {
    dependencies {
        implementation rootProject
    }
}

dependencies {
    compileOnly 'com.ezylang:EvalEx:3.1.1'
    compileOnly 'com.github.ben-manes.caffeine:caffeine:2.9.3'
    compileOnly 'com.google.guava:guava:33.0.0-jre'

    testImplementation('com.google.guava:guava:33.0.0-jre')
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            from components.java
        }
    }
}

def javadocProjects= [
        ':',
        ':settings-gson',
        ':settings-hocon',
        ':settings-toml',
        ':settings-yaml'
]

tasks.register('allJavadoc', Javadoc) {
    source javadocProjects.collect { project(it).sourceSets.main.allJava }
    classpath = files(javadocProjects.collect { project(it).sourceSets.main.compileClasspath })
    options {
        links 'https://docs.oracle.com/en/java/javase/11/docs/api/'
        links 'https://rabbitmq.github.io/rabbitmq-java-client/api/current/'
        links 'https://javadoc.io/doc/redis.clients/jedis/5.1.0/'
        links 'https://javadoc.io/doc/com.zaxxer/HikariCP/latest/'
        links 'https://javadoc.io/doc/org.jetbrains/annotations/latest/'
    }
    destinationDir = file(project.buildDir.path + '/docs/all-javadoc')
}
